// DO NOT EDIT. Autogenerated by Perfetto cppgen_plugin
#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_CONFIG_ANDROID_APP_WAKELOCK_CONFIG_PROTO_CPP_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_CONFIG_ANDROID_APP_WAKELOCK_CONFIG_PROTO_CPP_H_

#include <stdint.h>
#include <bitset>
#include <vector>
#include <string>
#include <type_traits>

#include "perfetto/protozero/cpp_message_obj.h"
#include "perfetto/protozero/copyable_ptr.h"
#include "perfetto/base/export.h"

namespace perfetto {
namespace protos {
namespace gen {
class AppWakelocksConfig;
}  // namespace perfetto
}  // namespace protos
}  // namespace gen

namespace protozero {
class Message;
}  // namespace protozero

namespace perfetto {
namespace protos {
namespace gen {

class PERFETTO_EXPORT_COMPONENT AppWakelocksConfig : public ::protozero::CppMessageObj {
 public:
  enum FieldNumbers {
    kWriteDelayMsFieldNumber = 1,
    kFilterDurationBelowMsFieldNumber = 2,
    kDropOwnerPidFieldNumber = 3,
  };

  AppWakelocksConfig();
  ~AppWakelocksConfig() override;
  AppWakelocksConfig(AppWakelocksConfig&&) noexcept;
  AppWakelocksConfig& operator=(AppWakelocksConfig&&);
  AppWakelocksConfig(const AppWakelocksConfig&);
  AppWakelocksConfig& operator=(const AppWakelocksConfig&);
  bool operator==(const AppWakelocksConfig&) const;
  bool operator!=(const AppWakelocksConfig& other) const { return !(*this == other); }

  bool ParseFromArray(const void*, size_t) override;
  std::string SerializeAsString() const override;
  std::vector<uint8_t> SerializeAsArray() const override;
  void Serialize(::protozero::Message*) const;

  bool has_write_delay_ms() const { return _has_field_[1]; }
  int32_t write_delay_ms() const { return write_delay_ms_; }
  void set_write_delay_ms(int32_t value) { write_delay_ms_ = value; _has_field_.set(1); }

  bool has_filter_duration_below_ms() const { return _has_field_[2]; }
  int32_t filter_duration_below_ms() const { return filter_duration_below_ms_; }
  void set_filter_duration_below_ms(int32_t value) { filter_duration_below_ms_ = value; _has_field_.set(2); }

  bool has_drop_owner_pid() const { return _has_field_[3]; }
  bool drop_owner_pid() const { return drop_owner_pid_; }
  void set_drop_owner_pid(bool value) { drop_owner_pid_ = value; _has_field_.set(3); }

 private:
  int32_t write_delay_ms_{};
  int32_t filter_duration_below_ms_{};
  bool drop_owner_pid_{};

  // Allows to preserve unknown protobuf fields for compatibility
  // with future versions of .proto files.
  std::string unknown_fields_;

  std::bitset<4> _has_field_{};
};

}  // namespace perfetto
}  // namespace protos
}  // namespace gen

#endif  // PERFETTO_PROTOS_PROTOS_PERFETTO_CONFIG_ANDROID_APP_WAKELOCK_CONFIG_PROTO_CPP_H_
