// Autogenerated by the ProtoZero compiler plugin. DO NOT EDIT.

#ifndef PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_BLUETOOTH_TRACE_PROTO_H_
#define PERFETTO_PROTOS_PROTOS_PERFETTO_TRACE_ANDROID_BLUETOOTH_TRACE_PROTO_H_

#include <stddef.h>
#include <stdint.h>

#include "perfetto/protozero/field_writer.h"
#include "perfetto/protozero/message.h"
#include "perfetto/protozero/packed_repeated_fields.h"
#include "perfetto/protozero/proto_decoder.h"
#include "perfetto/protozero/proto_utils.h"

namespace perfetto {
namespace protos {
namespace pbzero {
enum BluetoothTracePacketType : int32_t;
} // Namespace pbzero.
} // Namespace protos.
} // Namespace perfetto.

namespace perfetto {
namespace protos {
namespace pbzero {

enum BluetoothTracePacketType : int32_t {
  HCI_CMD = 1,
  HCI_EVT = 2,
  HCI_ACL_RX = 3,
  HCI_ACL_TX = 4,
  HCI_SCO_RX = 5,
  HCI_SCO_TX = 6,
  HCI_ISO_RX = 7,
  HCI_ISO_TX = 8,
};

constexpr BluetoothTracePacketType BluetoothTracePacketType_MIN = BluetoothTracePacketType::HCI_CMD;
constexpr BluetoothTracePacketType BluetoothTracePacketType_MAX = BluetoothTracePacketType::HCI_ISO_TX;


PERFETTO_PROTOZERO_CONSTEXPR14_OR_INLINE
const char* BluetoothTracePacketType_Name(::perfetto::protos::pbzero::BluetoothTracePacketType value) {
  switch (value) {
  case ::perfetto::protos::pbzero::BluetoothTracePacketType::HCI_CMD:
    return "HCI_CMD";

  case ::perfetto::protos::pbzero::BluetoothTracePacketType::HCI_EVT:
    return "HCI_EVT";

  case ::perfetto::protos::pbzero::BluetoothTracePacketType::HCI_ACL_RX:
    return "HCI_ACL_RX";

  case ::perfetto::protos::pbzero::BluetoothTracePacketType::HCI_ACL_TX:
    return "HCI_ACL_TX";

  case ::perfetto::protos::pbzero::BluetoothTracePacketType::HCI_SCO_RX:
    return "HCI_SCO_RX";

  case ::perfetto::protos::pbzero::BluetoothTracePacketType::HCI_SCO_TX:
    return "HCI_SCO_TX";

  case ::perfetto::protos::pbzero::BluetoothTracePacketType::HCI_ISO_RX:
    return "HCI_ISO_RX";

  case ::perfetto::protos::pbzero::BluetoothTracePacketType::HCI_ISO_TX:
    return "HCI_ISO_TX";
  }
  return "PBZERO_UNKNOWN_ENUM_VALUE";
}

class BluetoothTraceEvent_Decoder : public ::protozero::TypedProtoDecoder</*MAX_FIELD_ID=*/8, /*HAS_NONPACKED_REPEATED_FIELDS=*/false> {
 public:
  BluetoothTraceEvent_Decoder(const uint8_t* data, size_t len) : TypedProtoDecoder(data, len) {}
  explicit BluetoothTraceEvent_Decoder(const std::string& raw) : TypedProtoDecoder(reinterpret_cast<const uint8_t*>(raw.data()), raw.size()) {}
  explicit BluetoothTraceEvent_Decoder(const ::protozero::ConstBytes& raw) : TypedProtoDecoder(raw.data, raw.size) {}
  bool has_packet_type() const { return at<1>().valid(); }
  int32_t packet_type() const { return at<1>().as_int32(); }
  bool has_count() const { return at<2>().valid(); }
  uint32_t count() const { return at<2>().as_uint32(); }
  bool has_length() const { return at<3>().valid(); }
  uint32_t length() const { return at<3>().as_uint32(); }
  bool has_duration() const { return at<4>().valid(); }
  uint32_t duration() const { return at<4>().as_uint32(); }
  bool has_op_code() const { return at<5>().valid(); }
  uint32_t op_code() const { return at<5>().as_uint32(); }
  bool has_event_code() const { return at<6>().valid(); }
  uint32_t event_code() const { return at<6>().as_uint32(); }
  bool has_subevent_code() const { return at<7>().valid(); }
  uint32_t subevent_code() const { return at<7>().as_uint32(); }
  bool has_connection_handle() const { return at<8>().valid(); }
  uint32_t connection_handle() const { return at<8>().as_uint32(); }
};

class BluetoothTraceEvent : public ::protozero::Message {
 public:
  using Decoder = BluetoothTraceEvent_Decoder;
  enum : int32_t {
    kPacketTypeFieldNumber = 1,
    kCountFieldNumber = 2,
    kLengthFieldNumber = 3,
    kDurationFieldNumber = 4,
    kOpCodeFieldNumber = 5,
    kEventCodeFieldNumber = 6,
    kSubeventCodeFieldNumber = 7,
    kConnectionHandleFieldNumber = 8,
  };
  static constexpr const char* GetName() { return ".perfetto.protos.BluetoothTraceEvent"; }


  using FieldMetadata_PacketType =
    ::protozero::proto_utils::FieldMetadata<
      1,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kEnum,
      BluetoothTracePacketType,
      BluetoothTraceEvent>;

  static constexpr FieldMetadata_PacketType kPacketType{};
  void set_packet_type(BluetoothTracePacketType value) {
    static constexpr uint32_t field_id = FieldMetadata_PacketType::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kEnum>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Count =
    ::protozero::proto_utils::FieldMetadata<
      2,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      BluetoothTraceEvent>;

  static constexpr FieldMetadata_Count kCount{};
  void set_count(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Count::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Length =
    ::protozero::proto_utils::FieldMetadata<
      3,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      BluetoothTraceEvent>;

  static constexpr FieldMetadata_Length kLength{};
  void set_length(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Length::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_Duration =
    ::protozero::proto_utils::FieldMetadata<
      4,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      BluetoothTraceEvent>;

  static constexpr FieldMetadata_Duration kDuration{};
  void set_duration(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_Duration::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_OpCode =
    ::protozero::proto_utils::FieldMetadata<
      5,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      BluetoothTraceEvent>;

  static constexpr FieldMetadata_OpCode kOpCode{};
  void set_op_code(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_OpCode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_EventCode =
    ::protozero::proto_utils::FieldMetadata<
      6,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      BluetoothTraceEvent>;

  static constexpr FieldMetadata_EventCode kEventCode{};
  void set_event_code(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_EventCode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_SubeventCode =
    ::protozero::proto_utils::FieldMetadata<
      7,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      BluetoothTraceEvent>;

  static constexpr FieldMetadata_SubeventCode kSubeventCode{};
  void set_subevent_code(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_SubeventCode::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }

  using FieldMetadata_ConnectionHandle =
    ::protozero::proto_utils::FieldMetadata<
      8,
      ::protozero::proto_utils::RepetitionType::kNotRepeated,
      ::protozero::proto_utils::ProtoSchemaType::kUint32,
      uint32_t,
      BluetoothTraceEvent>;

  static constexpr FieldMetadata_ConnectionHandle kConnectionHandle{};
  void set_connection_handle(uint32_t value) {
    static constexpr uint32_t field_id = FieldMetadata_ConnectionHandle::kFieldId;
    // Call the appropriate protozero::Message::Append(field_id, ...)
    // method based on the type of the field.
    ::protozero::internal::FieldWriter<
      ::protozero::proto_utils::ProtoSchemaType::kUint32>
        ::Append(*this, field_id, value);
  }
};

} // Namespace.
} // Namespace.
} // Namespace.
#endif  // Include guard.
