// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: network_tester_config.proto
// Protobuf C++ Version: 6.30.1

#ifndef network_5ftester_5fconfig_2eproto_2epb_2eh
#define network_5ftester_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_network_5ftester_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_network_5ftester_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
namespace webrtc {
namespace network_tester {
namespace config {
class NetworkTesterAllConfigs;
struct NetworkTesterAllConfigsDefaultTypeInternal;
extern NetworkTesterAllConfigsDefaultTypeInternal _NetworkTesterAllConfigs_default_instance_;
extern const ::google::protobuf::internal::ClassDataLite<53> NetworkTesterAllConfigs_class_data_;
class NetworkTesterConfig;
struct NetworkTesterConfigDefaultTypeInternal;
extern NetworkTesterConfigDefaultTypeInternal _NetworkTesterConfig_default_instance_;
extern const ::google::protobuf::internal::ClassDataLite<49> NetworkTesterConfig_class_data_;
}  // namespace config
}  // namespace network_tester
}  // namespace webrtc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace webrtc {
namespace network_tester {
namespace config {

// ===================================================================


// -------------------------------------------------------------------

class NetworkTesterConfig final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:webrtc.network_tester.config.NetworkTesterConfig) */ {
 public:
  inline NetworkTesterConfig() : NetworkTesterConfig(nullptr) {}
  ~NetworkTesterConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkTesterConfig* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkTesterConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkTesterConfig(::google::protobuf::internal::ConstantInitialized);

  inline NetworkTesterConfig(const NetworkTesterConfig& from) : NetworkTesterConfig(nullptr, from) {}
  inline NetworkTesterConfig(NetworkTesterConfig&& from) noexcept
      : NetworkTesterConfig(nullptr, std::move(from)) {}
  inline NetworkTesterConfig& operator=(const NetworkTesterConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkTesterConfig& operator=(NetworkTesterConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const NetworkTesterConfig& default_instance() {
    return *reinterpret_cast<const NetworkTesterConfig*>(
        &_NetworkTesterConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NetworkTesterConfig& a, NetworkTesterConfig& b) { a.Swap(&b); }
  inline void Swap(NetworkTesterConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkTesterConfig* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkTesterConfig* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::MessageLite::DefaultConstruct<NetworkTesterConfig>(arena);
  }
  void CopyFrom(const NetworkTesterConfig& from);
  void MergeFrom(const NetworkTesterConfig& from) { NetworkTesterConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkTesterConfig* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "webrtc.network_tester.config.NetworkTesterConfig"; }

 protected:
  explicit NetworkTesterConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NetworkTesterConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NetworkTesterConfig& from);
  NetworkTesterConfig(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NetworkTesterConfig&& from) noexcept
      : NetworkTesterConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPacketSendIntervalMsFieldNumber = 1,
    kPacketSizeFieldNumber = 2,
    kExecutionTimeMsFieldNumber = 3,
  };
  // optional int32 packet_send_interval_ms = 1;
  bool has_packet_send_interval_ms() const;
  void clear_packet_send_interval_ms() ;
  ::int32_t packet_send_interval_ms() const;
  void set_packet_send_interval_ms(::int32_t value);

  private:
  ::int32_t _internal_packet_send_interval_ms() const;
  void _internal_set_packet_send_interval_ms(::int32_t value);

  public:
  // optional float packet_size = 2;
  bool has_packet_size() const;
  void clear_packet_size() ;
  float packet_size() const;
  void set_packet_size(float value);

  private:
  float _internal_packet_size() const;
  void _internal_set_packet_size(float value);

  public:
  // optional int32 execution_time_ms = 3;
  bool has_execution_time_ms() const;
  void clear_execution_time_ms() ;
  ::int32_t execution_time_ms() const;
  void set_execution_time_ms(::int32_t value);

  private:
  ::int32_t _internal_execution_time_ms() const;
  void _internal_set_execution_time_ms(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:webrtc.network_tester.config.NetworkTesterConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NetworkTesterConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t packet_send_interval_ms_;
    float packet_size_;
    ::int32_t execution_time_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_network_5ftester_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataLite<49> NetworkTesterConfig_class_data_;
// -------------------------------------------------------------------

class NetworkTesterAllConfigs final : public ::google::protobuf::MessageLite
/* @@protoc_insertion_point(class_definition:webrtc.network_tester.config.NetworkTesterAllConfigs) */ {
 public:
  inline NetworkTesterAllConfigs() : NetworkTesterAllConfigs(nullptr) {}
  ~NetworkTesterAllConfigs() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkTesterAllConfigs* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkTesterAllConfigs));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkTesterAllConfigs(::google::protobuf::internal::ConstantInitialized);

  inline NetworkTesterAllConfigs(const NetworkTesterAllConfigs& from) : NetworkTesterAllConfigs(nullptr, from) {}
  inline NetworkTesterAllConfigs(NetworkTesterAllConfigs&& from) noexcept
      : NetworkTesterAllConfigs(nullptr, std::move(from)) {}
  inline NetworkTesterAllConfigs& operator=(const NetworkTesterAllConfigs& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkTesterAllConfigs& operator=(NetworkTesterAllConfigs&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const NetworkTesterAllConfigs& default_instance() {
    return *reinterpret_cast<const NetworkTesterAllConfigs*>(
        &_NetworkTesterAllConfigs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NetworkTesterAllConfigs& a, NetworkTesterAllConfigs& b) { a.Swap(&b); }
  inline void Swap(NetworkTesterAllConfigs* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkTesterAllConfigs* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkTesterAllConfigs* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::MessageLite::DefaultConstruct<NetworkTesterAllConfigs>(arena);
  }
  void CopyFrom(const NetworkTesterAllConfigs& from);
  void MergeFrom(const NetworkTesterAllConfigs& from) { NetworkTesterAllConfigs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkTesterAllConfigs* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "webrtc.network_tester.config.NetworkTesterAllConfigs"; }

 protected:
  explicit NetworkTesterAllConfigs(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NetworkTesterAllConfigs(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NetworkTesterAllConfigs& from);
  NetworkTesterAllConfigs(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NetworkTesterAllConfigs&& from) noexcept
      : NetworkTesterAllConfigs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfigsFieldNumber = 1,
  };
  // repeated .webrtc.network_tester.config.NetworkTesterConfig configs = 1;
  int configs_size() const;
  private:
  int _internal_configs_size() const;

  public:
  void clear_configs() ;
  ::webrtc::network_tester::config::NetworkTesterConfig* PROTOBUF_NONNULL mutable_configs(int index);
  ::google::protobuf::RepeatedPtrField<::webrtc::network_tester::config::NetworkTesterConfig>* PROTOBUF_NONNULL mutable_configs();

  private:
  const ::google::protobuf::RepeatedPtrField<::webrtc::network_tester::config::NetworkTesterConfig>& _internal_configs() const;
  ::google::protobuf::RepeatedPtrField<::webrtc::network_tester::config::NetworkTesterConfig>* PROTOBUF_NONNULL _internal_mutable_configs();
  public:
  const ::webrtc::network_tester::config::NetworkTesterConfig& configs(int index) const;
  ::webrtc::network_tester::config::NetworkTesterConfig* PROTOBUF_NONNULL add_configs();
  const ::google::protobuf::RepeatedPtrField<::webrtc::network_tester::config::NetworkTesterConfig>& configs() const;
  // @@protoc_insertion_point(class_scope:webrtc.network_tester.config.NetworkTesterAllConfigs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NetworkTesterAllConfigs& from_msg);
    ::google::protobuf::RepeatedPtrField< ::webrtc::network_tester::config::NetworkTesterConfig > configs_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_network_5ftester_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataLite<53> NetworkTesterAllConfigs_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NetworkTesterConfig

// optional int32 packet_send_interval_ms = 1;
inline bool NetworkTesterConfig::has_packet_send_interval_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NetworkTesterConfig::clear_packet_send_interval_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_send_interval_ms_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t NetworkTesterConfig::packet_send_interval_ms() const {
  // @@protoc_insertion_point(field_get:webrtc.network_tester.config.NetworkTesterConfig.packet_send_interval_ms)
  return _internal_packet_send_interval_ms();
}
inline void NetworkTesterConfig::set_packet_send_interval_ms(::int32_t value) {
  _internal_set_packet_send_interval_ms(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:webrtc.network_tester.config.NetworkTesterConfig.packet_send_interval_ms)
}
inline ::int32_t NetworkTesterConfig::_internal_packet_send_interval_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_send_interval_ms_;
}
inline void NetworkTesterConfig::_internal_set_packet_send_interval_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_send_interval_ms_ = value;
}

// optional float packet_size = 2;
inline bool NetworkTesterConfig::has_packet_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NetworkTesterConfig::clear_packet_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_size_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float NetworkTesterConfig::packet_size() const {
  // @@protoc_insertion_point(field_get:webrtc.network_tester.config.NetworkTesterConfig.packet_size)
  return _internal_packet_size();
}
inline void NetworkTesterConfig::set_packet_size(float value) {
  _internal_set_packet_size(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:webrtc.network_tester.config.NetworkTesterConfig.packet_size)
}
inline float NetworkTesterConfig::_internal_packet_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_size_;
}
inline void NetworkTesterConfig::_internal_set_packet_size(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_size_ = value;
}

// optional int32 execution_time_ms = 3;
inline bool NetworkTesterConfig::has_execution_time_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NetworkTesterConfig::clear_execution_time_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_time_ms_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t NetworkTesterConfig::execution_time_ms() const {
  // @@protoc_insertion_point(field_get:webrtc.network_tester.config.NetworkTesterConfig.execution_time_ms)
  return _internal_execution_time_ms();
}
inline void NetworkTesterConfig::set_execution_time_ms(::int32_t value) {
  _internal_set_execution_time_ms(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:webrtc.network_tester.config.NetworkTesterConfig.execution_time_ms)
}
inline ::int32_t NetworkTesterConfig::_internal_execution_time_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execution_time_ms_;
}
inline void NetworkTesterConfig::_internal_set_execution_time_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_time_ms_ = value;
}

// -------------------------------------------------------------------

// NetworkTesterAllConfigs

// repeated .webrtc.network_tester.config.NetworkTesterConfig configs = 1;
inline int NetworkTesterAllConfigs::_internal_configs_size() const {
  return _internal_configs().size();
}
inline int NetworkTesterAllConfigs::configs_size() const {
  return _internal_configs_size();
}
inline void NetworkTesterAllConfigs::clear_configs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.configs_.Clear();
}
inline ::webrtc::network_tester::config::NetworkTesterConfig* PROTOBUF_NONNULL NetworkTesterAllConfigs::mutable_configs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:webrtc.network_tester.config.NetworkTesterAllConfigs.configs)
  return _internal_mutable_configs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::webrtc::network_tester::config::NetworkTesterConfig>* PROTOBUF_NONNULL NetworkTesterAllConfigs::mutable_configs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:webrtc.network_tester.config.NetworkTesterAllConfigs.configs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_configs();
}
inline const ::webrtc::network_tester::config::NetworkTesterConfig& NetworkTesterAllConfigs::configs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:webrtc.network_tester.config.NetworkTesterAllConfigs.configs)
  return _internal_configs().Get(index);
}
inline ::webrtc::network_tester::config::NetworkTesterConfig* PROTOBUF_NONNULL NetworkTesterAllConfigs::add_configs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::webrtc::network_tester::config::NetworkTesterConfig* _add = _internal_mutable_configs()->Add();
  // @@protoc_insertion_point(field_add:webrtc.network_tester.config.NetworkTesterAllConfigs.configs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::webrtc::network_tester::config::NetworkTesterConfig>& NetworkTesterAllConfigs::configs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:webrtc.network_tester.config.NetworkTesterAllConfigs.configs)
  return _internal_configs();
}
inline const ::google::protobuf::RepeatedPtrField<::webrtc::network_tester::config::NetworkTesterConfig>&
NetworkTesterAllConfigs::_internal_configs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.configs_;
}
inline ::google::protobuf::RepeatedPtrField<::webrtc::network_tester::config::NetworkTesterConfig>* PROTOBUF_NONNULL
NetworkTesterAllConfigs::_internal_mutable_configs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.configs_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace config
}  // namespace network_tester
}  // namespace webrtc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // network_5ftester_5fconfig_2eproto_2epb_2eh
